services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: employee-mgmt-system-sqlserver
    env_file:
      - .env
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=${MSSQL_PID}
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - employee-management-system-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -Q 'SELECT 1' -C"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  employee-management-system-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: employee-mgmt-system-api
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
      - Jwt__Key=${Jwt__Key}
    ports:
      - "8080:80"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - employee-management-system-network
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:80/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 60s
    restart: unless-stopped

networks:
  employee-management-system-network:
    driver: bridge

volumes:
  sqlserver_data:
    driver: local
