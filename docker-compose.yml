services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: employee-mgmt-system-sqlserver
    env_file:
      - .env
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=${MSSQL_PID}
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - employee-management-system-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -Q 'SELECT 1' -C"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  employee-management-system-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: employee-mgmt-system-api
    env_file:
      - .env      
    environment:
      - USE_HTTPS=false
      - ASPNETCORE_ENVIRONMENT=Development
      - Kestrel__Endpoints__Http__Url=${Kestrel__Endpoints__Http__Url}
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
      - Cors__AllowedOrigins=${Cors__AllowedOrigins}
      - Jwt__Key=${Jwt__Key}
      - Jwt__Issuer=${Jwt__Issuer}
      - Jwt__Audience=${Jwt__Audience}
      - Jwt__ExpireMinutes=${Jwt__ExpireMinutes}
    ports:
      - "8080:80"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - employee-management-system-network
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:80/health && curl -f http://localhost:80/health/database"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    volumes:
      - ./Core:/app/Core
      - /app/Core/bin
      - /app/Core/obj
      - ./DataAccess:/app/DataAccess
      - /app/DataAccess/bin
      - /app/DataAccess/obj
      - ./Dtos:/app/Dtos
      - /app/Dtos/bin
      - /app/Dtos/obj
      - ./Interfaces:/app/Interfaces
      - /app/Interfaces/bin
      - /app/Interfaces/obj
      - ./Models:/app/Models
      - /app/Models/bin
      - /app/Models/obj
      - ./WebApi:/app/WebApi
      - /app/WebApi/bin
      - /app/WebApi/obj
      - ./EmployeeManagementSystem.sln:/app/EmployeeManagementSystem.sln
    command: ["dotnet", "watch", "run", "--project", "WebApi/WebApi.csproj", "--launch-profile", "development"]


networks:
  employee-management-system-network:
    driver: bridge

volumes:
  sqlserver_data:
    driver: local
